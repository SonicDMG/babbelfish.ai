{
    "id": "dbdd01b8-027d-4f42-b7e9-cc157c24684a",
    "data": {
        "nodes": [
            {
                "id": "OpenAIModel-l5fMw",
                "type": "genericNode",
                "position": {
                    "x": 575.3601300615942,
                    "y": -181.11256561289264
                },
                "data": {
                    "type": "OpenAIModel",
                    "node": {
                        "template": {
                            "input_value": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input",
                                "advanced": false,
                                "input_types": [
                                    "Text",
                                    "Record",
                                    "Prompt"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langchain_openai import ChatOpenAI\nfrom pydantic.v1 import SecretStr\n\nfrom langflow.base.constants import STREAM_INFO_TEXT\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.base.models.openai_constants import MODEL_NAMES\nfrom langflow.field_typing import NestedDict, Text\n\n\nclass OpenAIModelComponent(LCModelComponent):\n    display_name = \"OpenAI\"\n    description = \"Generates text using OpenAI LLMs.\"\n    icon = \"OpenAI\"\n\n    field_order = [\n        \"max_tokens\",\n        \"model_kwargs\",\n        \"model_name\",\n        \"openai_api_base\",\n        \"openai_api_key\",\n        \"temperature\",\n        \"input_value\",\n        \"system_message\",\n        \"stream\",\n    ]\n\n    def build_config(self):\n        return {\n            \"input_value\": {\"display_name\": \"Input\", \"input_types\": [\"Text\", \"Record\", \"Prompt\"]},\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"advanced\": True,\n                \"info\": \"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"advanced\": True,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"advanced\": False,\n                \"options\": MODEL_NAMES,\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"advanced\": True,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"info\": \"The OpenAI API Key to use for the OpenAI model.\",\n                \"advanced\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"advanced\": False,\n                \"value\": 0.1,\n            },\n            \"stream\": {\n                \"display_name\": \"Stream\",\n                \"info\": STREAM_INFO_TEXT,\n                \"advanced\": True,\n            },\n            \"system_message\": {\n                \"display_name\": \"System Message\",\n                \"info\": \"System message to pass to the model.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        input_value: Text,\n        openai_api_key: str,\n        temperature: float = 0.1,\n        model_name: str = \"gpt-3.5-turbo\",\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        openai_api_base: Optional[str] = None,\n        stream: bool = False,\n        system_message: Optional[str] = None,\n    ) -> Text:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        if openai_api_key:\n            api_key = SecretStr(openai_api_key)\n        else:\n            api_key = None\n\n        output = ChatOpenAI(\n            max_tokens=max_tokens or None,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=api_key,\n            temperature=temperature,\n        )\n\n        return self.get_chat_result(output, stream, input_value, system_message)\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "max_tokens": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 256,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "max_tokens",
                                "display_name": "Max Tokens",
                                "advanced": true,
                                "dynamic": false,
                                "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "model_kwargs": {
                                "type": "NestedDict",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": {},
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "model_kwargs",
                                "display_name": "Model Kwargs",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "model_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "gpt-4o",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "gpt-4o",
                                    "gpt-4-turbo",
                                    "gpt-4-turbo-preview",
                                    "gpt-3.5-turbo",
                                    "gpt-3.5-turbo-0125"
                                ],
                                "name": "model_name",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "openai_api_base": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "openai_api_base",
                                "display_name": "OpenAI API Base",
                                "advanced": true,
                                "dynamic": false,
                                "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "openai_api_key": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": true,
                                "name": "openai_api_key",
                                "display_name": "OpenAI API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The OpenAI API Key to use for the OpenAI model.",
                                "load_from_db": true,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "openai_KEY"
                            },
                            "stream": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "stream",
                                "display_name": "Stream",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Stream the response from the model. Streaming works only in Chat.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "system_message": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "system_message",
                                "display_name": "System Message",
                                "advanced": true,
                                "dynamic": false,
                                "info": "System message to pass to the model.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "temperature": {
                                "type": "float",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 0.1,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "temperature",
                                "display_name": "Temperature",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "rangeSpec": {
                                    "step_type": "float",
                                    "min": -1,
                                    "max": 1,
                                    "step": 0.1
                                },
                                "load_from_db": false,
                                "title_case": false
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Generates text using OpenAI LLMs.",
                        "icon": "OpenAI",
                        "base_classes": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "display_name": "OpenAI",
                        "documentation": "",
                        "custom_fields": {
                            "input_value": null,
                            "openai_api_key": null,
                            "temperature": null,
                            "model_name": null,
                            "max_tokens": null,
                            "model_kwargs": null,
                            "openai_api_base": null,
                            "stream": null,
                            "system_message": null
                        },
                        "output_types": [
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [
                            "max_tokens",
                            "model_kwargs",
                            "model_name",
                            "openai_api_base",
                            "openai_api_key",
                            "temperature",
                            "input_value",
                            "system_message",
                            "stream"
                        ],
                        "beta": false,
                        "edited": true
                    },
                    "id": "OpenAIModel-l5fMw",
                    "description": "Generates text using OpenAI LLMs.",
                    "display_name": "OpenAI",
                    "edited": false
                },
                "selected": false,
                "width": 384,
                "height": 571,
                "positionAbsolute": {
                    "x": 575.3601300615942,
                    "y": -181.11256561289264
                },
                "dragging": false
            },
            {
                "id": "TextInput-XprTX",
                "type": "genericNode",
                "position": {
                    "x": -519.8945677594006,
                    "y": -305.76545568163414
                },
                "data": {
                    "type": "TextInput",
                    "node": {
                        "template": {
                            "input_value": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "French",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Text",
                                "advanced": false,
                                "input_types": [
                                    "Record",
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "Text or Record to be passed as input.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langflow.base.io.text import TextComponent\nfrom langflow.field_typing import Text\n\n\nclass TextInput(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    def build_config(self):\n        return {\n            \"input_value\": {\n                \"display_name\": \"Text\",\n                \"input_types\": [\"Record\", \"Text\"],\n                \"info\": \"Text or Record to be passed as input.\",\n            },\n            \"record_template\": {\n                \"display_name\": \"Record Template\",\n                \"multiline\": True,\n                \"info\": \"Template to convert Record to Text. If left empty, it will be dynamically set to the Record's text key.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        input_value: Optional[Text] = \"\",\n        record_template: Optional[str] = \"\",\n    ) -> Text:\n        return super().build(input_value=input_value, record_template=record_template)\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "record_template": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "record_template",
                                "display_name": "Record Template",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Template to convert Record to Text. If left empty, it will be dynamically set to the Record's text key.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Get text inputs from the Playground.",
                        "icon": "type",
                        "base_classes": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "display_name": "Language",
                        "documentation": "",
                        "custom_fields": {
                            "input_value": null,
                            "record_template": null
                        },
                        "output_types": [
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false,
                        "edited": true
                    },
                    "id": "TextInput-XprTX",
                    "description": "Get text inputs from the Playground.",
                    "display_name": "Language",
                    "edited": false
                },
                "selected": false,
                "width": 384,
                "height": 297,
                "positionAbsolute": {
                    "x": -519.8945677594006,
                    "y": -305.76545568163414
                },
                "dragging": false
            },
            {
                "id": "GroqModel-BUllZ",
                "type": "genericNode",
                "position": {
                    "x": 579.4586991454855,
                    "y": 424.69210789426484
                },
                "data": {
                    "type": "GroqModel",
                    "node": {
                        "template": {
                            "input_value": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input",
                                "advanced": false,
                                "input_types": [
                                    "Text",
                                    "Record",
                                    "Prompt"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langchain_groq import ChatGroq\nfrom langflow.base.models.groq_constants import MODEL_NAMES\nfrom pydantic.v1 import SecretStr\n\nfrom langflow.base.constants import STREAM_INFO_TEXT\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import Text\n\n\nclass GroqModel(LCModelComponent):\n    display_name: str = \"Groq\"\n    description: str = \"Generate text using Groq.\"\n    icon = \"Groq\"\n\n    field_order = [\n        \"groq_api_key\",\n        \"model\",\n        \"max_output_tokens\",\n        \"temperature\",\n        \"top_k\",\n        \"top_p\",\n        \"n\",\n        \"input_value\",\n        \"system_message\",\n        \"stream\",\n    ]\n\n    def build_config(self):\n        return {\n            \"groq_api_key\": {\n                \"display_name\": \"Groq API Key\",\n                \"info\": \"API key for the Groq API.\",\n                \"password\": True,\n            },\n            \"groq_api_base\": {\n                \"display_name\": \"Groq API Base\",\n                \"info\": \"Base URL path for API requests, leave blank if not using a proxy or service emulator.\",\n                \"advanced\": True,\n            },\n            \"max_tokens\": {\n                \"display_name\": \"Max Output Tokens\",\n                \"info\": \"The maximum number of tokens to generate.\",\n                \"advanced\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"info\": \"Run inference with this temperature. Must by in the closed interval [0.0, 1.0].\",\n            },\n            \"n\": {\n                \"display_name\": \"N\",\n                \"info\": \"Number of chat completions to generate for each prompt. Note that the API may not return the full n completions if duplicates are generated.\",\n                \"advanced\": True,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model\",\n                \"info\": \"The name of the model to use. Supported examples: gemini-pro\",\n                \"options\": MODEL_NAMES,\n            },\n            \"input_value\": {\"display_name\": \"Input\", \"input_types\": [\"Text\", \"Record\", \"Prompt\"]},\n            \"stream\": {\n                \"display_name\": \"Stream\",\n                \"info\": STREAM_INFO_TEXT,\n                \"advanced\": True,\n            },\n            \"system_message\": {\n                \"display_name\": \"System Message\",\n                \"info\": \"System message to pass to the model.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        groq_api_key: str,\n        model_name: str,\n        input_value: Text,\n        groq_api_base: Optional[str] = None,\n        max_tokens: Optional[int] = None,\n        temperature: float = 0.1,\n        n: Optional[int] = 1,\n        stream: bool = False,\n        system_message: Optional[str] = None,\n    ) -> Text:\n        output = ChatGroq(\n            model_name=model_name,\n            max_tokens=max_tokens or None,  # type: ignore\n            temperature=temperature,\n            groq_api_base=groq_api_base,\n            n=n or 1,\n            groq_api_key=SecretStr(groq_api_key),\n            streaming=stream,\n        )\n        return self.get_chat_result(output, stream, input_value, system_message)\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "groq_api_base": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "groq_api_base",
                                "display_name": "Groq API Base",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Base URL path for API requests, leave blank if not using a proxy or service emulator.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "groq_api_key": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": true,
                                "name": "groq_api_key",
                                "display_name": "Groq API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "API key for the Groq API.",
                                "load_from_db": true,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "groq_API_KEY"
                            },
                            "max_tokens": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "max_tokens",
                                "display_name": "Max Output Tokens",
                                "advanced": true,
                                "dynamic": false,
                                "info": "The maximum number of tokens to generate.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "model_name": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "llama3-8b-8192",
                                    "llama3-70b-8192",
                                    "mixtral-8x7b-32768",
                                    "gemma-7b-it"
                                ],
                                "name": "model_name",
                                "display_name": "Model",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The name of the model to use. Supported examples: gemini-pro",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "gemma-7b-it"
                            },
                            "n": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 1,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "n",
                                "display_name": "N",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Number of chat completions to generate for each prompt. Note that the API may not return the full n completions if duplicates are generated.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "stream": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "stream",
                                "display_name": "Stream",
                                "advanced": false,
                                "dynamic": false,
                                "info": "Stream the response from the model. Streaming works only in Chat.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "system_message": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "system_message",
                                "display_name": "System Message",
                                "advanced": true,
                                "dynamic": false,
                                "info": "System message to pass to the model.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "temperature": {
                                "type": "float",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 0.1,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "temperature",
                                "display_name": "Temperature",
                                "advanced": false,
                                "dynamic": false,
                                "info": "Run inference with this temperature. Must by in the closed interval [0.0, 1.0].",
                                "rangeSpec": {
                                    "step_type": "float",
                                    "min": -1,
                                    "max": 1,
                                    "step": 0.1
                                },
                                "load_from_db": false,
                                "title_case": false
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Generate text using Groq.",
                        "icon": "Groq",
                        "base_classes": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "display_name": "Groq",
                        "documentation": "",
                        "custom_fields": {
                            "groq_api_key": null,
                            "model_name": null,
                            "input_value": null,
                            "groq_api_base": null,
                            "max_tokens": null,
                            "temperature": null,
                            "n": null,
                            "stream": null,
                            "system_message": null
                        },
                        "output_types": [
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [
                            "groq_api_key",
                            "model",
                            "max_output_tokens",
                            "temperature",
                            "top_k",
                            "top_p",
                            "n",
                            "input_value",
                            "system_message",
                            "stream"
                        ],
                        "beta": false,
                        "edited": true
                    },
                    "id": "GroqModel-BUllZ",
                    "description": "Generate text using Groq.",
                    "display_name": "Groq"
                },
                "selected": false,
                "width": 384,
                "height": 663,
                "positionAbsolute": {
                    "x": 579.4586991454855,
                    "y": 424.69210789426484
                },
                "dragging": false
            },
            {
                "id": "TextInput-kSpvj",
                "type": "genericNode",
                "position": {
                    "x": -528.9178047343839,
                    "y": 564.8817874494916
                },
                "data": {
                    "type": "TextInput",
                    "node": {
                        "template": {
                            "input_value": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "DataStax, Langflow, Gen AI, babbelfish AI, elevenlabs ai",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Text",
                                "advanced": false,
                                "input_types": [
                                    "Record",
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "Text or Record to be passed as input.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langflow.base.io.text import TextComponent\nfrom langflow.field_typing import Text\n\n\nclass TextInput(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Playground.\"\n    icon = \"type\"\n\n    def build_config(self):\n        return {\n            \"input_value\": {\n                \"display_name\": \"Text\",\n                \"input_types\": [\"Record\", \"Text\"],\n                \"info\": \"Text or Record to be passed as input.\",\n            },\n            \"record_template\": {\n                \"display_name\": \"Record Template\",\n                \"multiline\": True,\n                \"info\": \"Template to convert Record to Text. If left empty, it will be dynamically set to the Record's text key.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        input_value: Optional[Text] = \"\",\n        record_template: Optional[str] = \"\",\n    ) -> Text:\n        return super().build(input_value=input_value, record_template=record_template)\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "record_template": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "record_template",
                                "display_name": "Record Template",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Template to convert Record to Text. If left empty, it will be dynamically set to the Record's text key.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Get text inputs from the Playground.",
                        "icon": "type",
                        "base_classes": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "display_name": "Text Input",
                        "documentation": "",
                        "custom_fields": {
                            "input_value": null,
                            "record_template": null
                        },
                        "output_types": [
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false,
                        "edited": true
                    },
                    "id": "TextInput-kSpvj",
                    "description": "Get text inputs from the Playground.",
                    "display_name": "Text Input",
                    "edited": false
                },
                "selected": false,
                "width": 384,
                "height": 297,
                "positionAbsolute": {
                    "x": -528.9178047343839,
                    "y": 564.8817874494916
                },
                "dragging": false
            },
            {
                "id": "CustomComponent-1JudS",
                "type": "genericNode",
                "position": {
                    "x": 1216.947816284562,
                    "y": 335.34660493161977
                },
                "data": {
                    "type": "CustomComponent",
                    "node": {
                        "template": {
                            "input_value": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The input to the model.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "chunk_size": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "1024",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chunk_size",
                                "display_name": "Chunk Size",
                                "advanced": false,
                                "dynamic": false,
                                "info": "Size of chunks to read/write at a time",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "# from langflow.field_typing import Data\nfrom langflow.custom import CustomComponent\nfrom langflow.field_typing import Text\nfrom langflow.schema.message import Message\n\n# from elevenlabs import generate, set_api_key\nfrom elevenlabs.client import ElevenLabs\nfrom elevenlabs import play, stream\n\n\nclass GenerateAudioComponent(CustomComponent):\n    display_name = \"Generate Audio\"\n    description = \"A component to generate audio from the input text using Eleven Labs.\"\n    icon = \"Play\"\n    beta: bool = True\n\n    def build_config(self):\n        return {\n            \"input_value\": {\"display_name\": \"Input\", \"info\": \"The input to the model.\"},\n            \"chunk_size\": {\"display_name\": \"Chunk Size\", \"info\": \"Size of chunks to read/write at a time\"},\n            \"xi_api_key\": {\"display_name\": \"Eleven Labs API Key\", \"info\": \"API key for Eleven Labs.\"},\n            \"voice_id\": {\"display_name\": \"Voice ID\", \"info\": \"ID of the voice model to use.\"},\n            \"stream_audio\": {\"display_name\": \"Stream\", \"info\": \"Stream audio in real-time, as it's being generated.\", \"advanced\": True,\n            },\n        }\n        \n    def build(self,\n        input_value: Text,\n        xi_api_key: str,\n        voice_id: str,\n        stream_audio: bool = True,\n        chunk_size: Optional[int] = 1024):\n            \"\"\"\n            Generate audio from the input text using the ElevenLabs \n            Text-to-Speech API and stream it directly to speakers.\n            \"\"\"\n            \n            self.input_value = input_value\n            self.xi_api_key = xi_api_key\n            self.voice_id = voice_id\n            self.stream_audio = stream_audio\n            self.chunk_size = chunk_size\n            \n            client = ElevenLabs(\n              api_key=self.xi_api_key # Defaults to ELEVEN_API_KEY\n            )\n            audio_stream = client.generate(\n                text=self.input_value,\n                voice=self.voice_id,\n                model=\"eleven_multilingual_v2\",\n                stream=self.stream_audio,\n                optimize_streaming_latency=0,\n            )\n            stream(audio_stream)\n            \n            #print(input_value)\n            \n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "stream_audio": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": true,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "stream_audio",
                                "display_name": "Stream",
                                "advanced": false,
                                "dynamic": false,
                                "info": "Stream audio in real-time, as it's being generated.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "voice_id": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "voice_id",
                                "display_name": "Voice ID",
                                "advanced": false,
                                "dynamic": false,
                                "info": "ID of the voice model to use.",
                                "load_from_db": true,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "elevenlabs_VOICE_ID"
                            },
                            "xi_api_key": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "xi_api_key",
                                "display_name": "Eleven Labs API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "API key for Eleven Labs.",
                                "load_from_db": true,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "elevenlabs_API_KEY"
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "A component to generate audio from the input text using Eleven Labs.",
                        "icon": "Play",
                        "base_classes": [],
                        "display_name": "ElevenLabs.io",
                        "documentation": "",
                        "custom_fields": {
                            "input_value": null,
                            "xi_api_key": null,
                            "voice_id": null,
                            "stream_audio": null,
                            "chunk_size": null
                        },
                        "output_types": [],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": true,
                        "edited": true
                    },
                    "id": "CustomComponent-1JudS",
                    "description": "A component to generate audio from the input text using Eleven Labs.",
                    "display_name": "ElevenLabs.io"
                },
                "selected": false,
                "width": 384,
                "height": 627,
                "dragging": false,
                "positionAbsolute": {
                    "x": 1216.947816284562,
                    "y": 335.34660493161977
                }
            },
            {
                "id": "MistralModel-ooPBA",
                "type": "genericNode",
                "position": {
                    "x": 579.6179238057994,
                    "y": 1106.4415103158801
                },
                "data": {
                    "type": "MistralModel",
                    "node": {
                        "template": {
                            "input_value": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input",
                                "advanced": false,
                                "input_types": [
                                    "Text",
                                    "Record",
                                    "Prompt"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langchain_mistralai import ChatMistralAI\nfrom pydantic.v1 import SecretStr\n\nfrom langflow.base.constants import STREAM_INFO_TEXT\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.field_typing import Text\n\n\nclass MistralAIModelComponent(LCModelComponent):\n    display_name = \"MistralAI\"\n    description = \"Generates text using MistralAI LLMs.\"\n    icon = \"MistralAI\"\n\n    field_order = [\n        \"max_tokens\",\n        \"model_kwargs\",\n        \"model_name\",\n        \"mistral_api_base\",\n        \"mistral_api_key\",\n        \"temperature\",\n        \"input_value\",\n        \"system_message\",\n        \"stream\",\n    ]\n\n    def build_config(self):\n        return {\n            \"input_value\": {\"display_name\": \"Input\", \"input_types\": [\"Text\", \"Record\", \"Prompt\"]},\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"advanced\": True,\n                \"info\": \"The maximum number of tokens to generate. Set to 0 for unlimited tokens.\",\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"advanced\": False,\n                \"options\": [\n                    \"open-mistral-7b\",\n                    \"open-mixtral-8x7b\",\n                    \"open-mixtral-8x22b\",\n                    \"mistral-small-latest\",\n                    \"mistral-medium-latest\",\n                    \"mistral-large-latest\",\n                ],\n                \"value\": \"open-mistral-7b\",\n            },\n            \"mistral_api_base\": {\n                \"display_name\": \"Mistral API Base\",\n                \"advanced\": True,\n                \"info\": (\n                    \"The base URL of the Mistral API. Defaults to https://api.mistral.ai.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"mistral_api_key\": {\n                \"display_name\": \"Mistral API Key\",\n                \"info\": \"The Mistral API Key to use for the Mistral model.\",\n                \"advanced\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"advanced\": False,\n                \"value\": 0.1,\n            },\n            \"stream\": {\n                \"display_name\": \"Stream\",\n                \"info\": STREAM_INFO_TEXT,\n                \"advanced\": True,\n            },\n            \"system_message\": {\n                \"display_name\": \"System Message\",\n                \"info\": \"System message to pass to the model.\",\n                \"advanced\": True,\n            },\n            \"max_retries\": {\n                \"display_name\": \"Max Retries\",\n                \"advanced\": True,\n            },\n            \"timeout\": {\n                \"display_name\": \"Timeout\",\n                \"advanced\": True,\n            },\n            \"max_concurrent_requests\": {\n                \"display_name\": \"Max Concurrent Requests\",\n                \"advanced\": True,\n            },\n            \"top_p\": {\n                \"display_name\": \"Top P\",\n                \"advanced\": True,\n            },\n            \"random_seed\": {\n                \"display_name\": \"Random Seed\",\n                \"advanced\": True,\n            },\n            \"safe_mode\": {\n                \"display_name\": \"Safe Mode\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        input_value: Text,\n        mistral_api_key: str,\n        model_name: str,\n        temperature: float = 0.1,\n        max_tokens: Optional[int] = 256,\n        mistral_api_base: Optional[str] = None,\n        stream: bool = False,\n        system_message: Optional[str] = None,\n        max_retries: int = 5,\n        timeout: int = 120,\n        max_concurrent_requests: int = 64,\n        top_p: float = 1,\n        random_seed: Optional[int] = None,\n        safe_mode: bool = False,\n    ) -> Text:\n        if not mistral_api_base:\n            mistral_api_base = \"https://api.mistral.ai\"\n        if mistral_api_key:\n            api_key = SecretStr(mistral_api_key)\n        else:\n            api_key = None\n\n        chat_model = ChatMistralAI(\n            max_tokens=max_tokens or None,\n            model_name=model_name,\n            endpoint=mistral_api_base,\n            api_key=api_key,\n            temperature=temperature,\n            max_retries=max_retries,\n            timeout=timeout,\n            max_concurrent_requests=max_concurrent_requests,\n            top_p=top_p,\n            random_seed=random_seed,\n            safe_mode=safe_mode,\n        )\n\n        return self.get_chat_result(chat_model, stream, input_value, system_message)\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "max_concurrent_requests": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 64,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "max_concurrent_requests",
                                "display_name": "Max Concurrent Requests",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "max_retries": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 5,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "max_retries",
                                "display_name": "Max Retries",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "max_tokens": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 256,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "max_tokens",
                                "display_name": "Max Tokens",
                                "advanced": true,
                                "dynamic": false,
                                "info": "The maximum number of tokens to generate. Set to 0 for unlimited tokens.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "mistral_api_base": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "mistral_api_base",
                                "display_name": "Mistral API Base",
                                "advanced": true,
                                "dynamic": false,
                                "info": "The base URL of the Mistral API. Defaults to https://api.mistral.ai.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "https://api.mistral.ai/v1/"
                            },
                            "mistral_api_key": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": true,
                                "name": "mistral_api_key",
                                "display_name": "Mistral API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The Mistral API Key to use for the Mistral model.",
                                "load_from_db": true,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "mistral_API_KEY"
                            },
                            "model_name": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "open-mixtral-8x22b",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "open-mistral-7b",
                                    "open-mixtral-8x7b",
                                    "open-mixtral-8x22b",
                                    "mistral-small-latest",
                                    "mistral-medium-latest",
                                    "mistral-large-latest"
                                ],
                                "name": "model_name",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "random_seed": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "random_seed",
                                "display_name": "Random Seed",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "safe_mode": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "safe_mode",
                                "display_name": "Safe Mode",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "stream": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "stream",
                                "display_name": "Stream",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Stream the response from the model. Streaming works only in Chat.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "system_message": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "system_message",
                                "display_name": "System Message",
                                "advanced": true,
                                "dynamic": false,
                                "info": "System message to pass to the model.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "temperature": {
                                "type": "float",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 0.1,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "temperature",
                                "display_name": "Temperature",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "rangeSpec": {
                                    "step_type": "float",
                                    "min": -1,
                                    "max": 1,
                                    "step": 0.1
                                },
                                "load_from_db": false,
                                "title_case": false
                            },
                            "timeout": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 120,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "timeout",
                                "display_name": "Timeout",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "top_p": {
                                "type": "float",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 1,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "top_p",
                                "display_name": "Top P",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "rangeSpec": {
                                    "step_type": "float",
                                    "min": -1,
                                    "max": 1,
                                    "step": 0.1
                                },
                                "load_from_db": false,
                                "title_case": false
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Generates text using MistralAI LLMs.",
                        "icon": "MistralAI",
                        "base_classes": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "display_name": "MistralAI",
                        "documentation": "",
                        "custom_fields": {
                            "input_value": null,
                            "mistral_api_key": null,
                            "model_name": null,
                            "temperature": null,
                            "max_tokens": null,
                            "mistral_api_base": null,
                            "stream": null,
                            "system_message": null,
                            "max_retries": null,
                            "timeout": null,
                            "max_concurrent_requests": null,
                            "top_p": null,
                            "random_seed": null,
                            "safe_mode": null
                        },
                        "output_types": [
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [
                            "max_tokens",
                            "model_kwargs",
                            "model_name",
                            "mistral_api_base",
                            "mistral_api_key",
                            "temperature",
                            "input_value",
                            "system_message",
                            "stream"
                        ],
                        "beta": false,
                        "edited": true
                    },
                    "id": "MistralModel-ooPBA",
                    "description": "Generates text using MistralAI LLMs.",
                    "display_name": "MistralAI",
                    "edited": false
                },
                "selected": false,
                "width": 384,
                "height": 571,
                "positionAbsolute": {
                    "x": 579.6179238057994,
                    "y": 1106.4415103158801
                },
                "dragging": false
            },
            {
                "id": "ChatInput-hsfFT",
                "type": "genericNode",
                "position": {
                    "x": -529.8883688932746,
                    "y": 106.57114925101396
                },
                "data": {
                    "type": "ChatInput",
                    "node": {
                        "template": {
                            "files": {
                                "type": "file",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [
                                    ".txt",
                                    ".md",
                                    ".mdx",
                                    ".csv",
                                    ".json",
                                    ".yaml",
                                    ".yml",
                                    ".xml",
                                    ".html",
                                    ".htm",
                                    ".pdf",
                                    ".docx",
                                    ".py",
                                    ".sh",
                                    ".sql",
                                    ".js",
                                    ".ts",
                                    ".tsx",
                                    ".jpg",
                                    ".jpeg",
                                    ".png",
                                    ".bmp"
                                ],
                                "file_path": "",
                                "password": false,
                                "name": "files",
                                "display_name": "Files",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Files to be sent with the message.",
                                "load_from_db": false,
                                "title_case": false,
                                "value": ""
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langflow.base.io.chat import ChatComponent\nfrom langflow.schema.message import Message\nfrom langflow.field_typing import Text\nfrom typing import Union\n\n\nclass ChatInput(ChatComponent):\n    display_name = \"Chat Input\"\n    description = \"Get chat inputs from the Playground.\"\n    icon = \"ChatInput\"\n\n    def build_config(self):\n        build_config = super().build_config()\n        build_config[\"input_value\"] = {\n            \"input_types\": [],\n            \"display_name\": \"Text\",\n            \"multiline\": True,\n        }\n\n        return build_config\n\n    def build(\n        self,\n        sender: Optional[str] = \"User\",\n        sender_name: Optional[str] = \"User\",\n        input_value: Optional[str] = None,\n        files: Optional[list[str]] = None,\n        session_id: Optional[str] = None,\n        return_message: Optional[bool] = False,\n    ) -> Union[Message, Text]:\n        return super().build_with_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            files=files,\n            session_id=session_id,\n            return_message=return_message,\n        )\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "input_value": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Text",
                                "advanced": false,
                                "input_types": [],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "value": "these work just fine"
                            },
                            "return_message": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "return_message",
                                "display_name": "Return Message",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Return the message as a Message containing the sender, sender_name, and session_id.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "sender": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "User",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Machine",
                                    "User"
                                ],
                                "name": "sender",
                                "display_name": "Sender Type",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "sender_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "User",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "sender_name",
                                "display_name": "Sender Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "session_id": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": true,
                                "dynamic": false,
                                "info": "If provided, the message will be stored in the memory.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Get chat inputs from the Playground.",
                        "icon": "ChatInput",
                        "base_classes": [
                            "Message",
                            "object",
                            "str",
                            "Text"
                        ],
                        "display_name": "Chat Input",
                        "documentation": "",
                        "custom_fields": {
                            "sender": null,
                            "sender_name": null,
                            "input_value": null,
                            "files": null,
                            "session_id": null,
                            "return_message": null
                        },
                        "output_types": [
                            "Message",
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false,
                        "edited": true
                    },
                    "id": "ChatInput-hsfFT",
                    "description": "Get chat inputs from the Playground.",
                    "display_name": "Chat Input",
                    "edited": false
                },
                "selected": false,
                "width": 384,
                "height": 383,
                "positionAbsolute": {
                    "x": -529.8883688932746,
                    "y": 106.57114925101396
                },
                "dragging": false
            },
            {
                "id": "Prompt-OnUxX",
                "type": "genericNode",
                "position": {
                    "x": 46.12475921189184,
                    "y": 3.492028893127099
                },
                "data": {
                    "type": "Prompt",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from langflow.custom import CustomComponent\nfrom langflow.field_typing import TemplateField\nfrom langflow.field_typing.prompt import Prompt\n\n\nclass PromptComponent(CustomComponent):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n\n    def build_config(self):\n        return {\n            \"template\": TemplateField(display_name=\"Template\"),\n            \"code\": TemplateField(advanced=True),\n        }\n\n    async def build(\n        self,\n        template: Prompt,\n        **kwargs,\n    ) -> Prompt:\n        prompt = await Prompt.from_template_and_variables(template, kwargs)\n        self.status = prompt.format_text()\n        return prompt\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "template": {
                                "type": "prompt",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "Translate the user's input into {language} using a relaxed, informal tone with slang. Stay close to the original meaning.\n\nReference these vocabulary words for translation: {vocab}\n\nTranslate only the text. Do not add any commentary.\n\nUser:\n{user_input}\n\nAnswer:",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "template",
                                "display_name": "Template",
                                "advanced": false,
                                "input_types": [
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "_type": "CustomComponent",
                            "language": {
                                "field_type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "language",
                                "display_name": "language",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "Message",
                                    "Record",
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "type": "str"
                            },
                            "vocab": {
                                "field_type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "vocab",
                                "display_name": "vocab",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "Message",
                                    "Record",
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "type": "str"
                            },
                            "user_input": {
                                "field_type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "user_input",
                                "display_name": "user_input",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "Message",
                                    "Record",
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "type": "str"
                            }
                        },
                        "description": "Create a prompt template with dynamic variables.",
                        "icon": "prompts",
                        "is_input": null,
                        "is_output": null,
                        "is_composition": null,
                        "base_classes": [
                            "Prompt",
                            "Record"
                        ],
                        "name": "",
                        "display_name": "Prompt",
                        "documentation": "",
                        "custom_fields": {
                            "template": [
                                "language",
                                "vocab",
                                "user_input"
                            ]
                        },
                        "output_types": [
                            "Prompt"
                        ],
                        "full_path": null,
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false,
                        "error": null
                    },
                    "id": "Prompt-OnUxX",
                    "description": "Create a prompt template with dynamic variables.",
                    "display_name": "Prompt"
                },
                "selected": false,
                "width": 384,
                "height": 607,
                "positionAbsolute": {
                    "x": 46.12475921189184,
                    "y": 3.492028893127099
                },
                "dragging": false
            },
            {
                "id": "ChatOutput-iFaQ0",
                "type": "genericNode",
                "position": {
                    "x": 1223.8975840751375,
                    "y": -35.6564189196976
                },
                "data": {
                    "type": "ChatOutput",
                    "node": {
                        "template": {
                            "files": {
                                "type": "file",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [
                                    ".txt",
                                    ".md",
                                    ".mdx",
                                    ".csv",
                                    ".json",
                                    ".yaml",
                                    ".yml",
                                    ".xml",
                                    ".html",
                                    ".htm",
                                    ".pdf",
                                    ".docx",
                                    ".py",
                                    ".sh",
                                    ".sql",
                                    ".js",
                                    ".ts",
                                    ".tsx",
                                    ".jpg",
                                    ".jpeg",
                                    ".png",
                                    ".bmp"
                                ],
                                "file_path": "",
                                "password": false,
                                "name": "files",
                                "display_name": "Files",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Files to be sent with the message.",
                                "load_from_db": false,
                                "title_case": false,
                                "value": ""
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional, Union\n\nfrom langflow.base.io.chat import ChatComponent\nfrom langflow.field_typing import Text\nfrom langflow.schema.message import Message\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Playground.\"\n    icon = \"ChatOutput\"\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine\",\n        sender_name: Optional[str] = \"AI\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        files: Optional[list[str]] = None,\n        return_message: Optional[bool] = False,\n    ) -> Union[Message, Text]:\n        return super().build_with_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            files=files,\n            return_message=return_message,\n        )\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "input_value": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Text",
                                "advanced": false,
                                "input_types": [
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "return_message": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "return_message",
                                "display_name": "Return Message",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Return the message as a Message containing the sender, sender_name, and session_id.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "sender": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "Machine",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Machine",
                                    "User"
                                ],
                                "name": "sender",
                                "display_name": "Sender Type",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "sender_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "AI",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "sender_name",
                                "display_name": "Sender Name",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "session_id": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": true,
                                "dynamic": false,
                                "info": "If provided, the message will be stored in the memory.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Display a chat message in the Playground.",
                        "icon": "ChatOutput",
                        "base_classes": [
                            "Message",
                            "object",
                            "str",
                            "Text"
                        ],
                        "display_name": "Chat Output",
                        "documentation": "",
                        "custom_fields": {
                            "sender": null,
                            "sender_name": null,
                            "input_value": null,
                            "session_id": null,
                            "files": null,
                            "return_message": null
                        },
                        "output_types": [
                            "Message",
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "ChatOutput-iFaQ0"
                },
                "selected": false,
                "width": 384,
                "height": 297,
                "positionAbsolute": {
                    "x": 1223.8975840751375,
                    "y": -35.6564189196976
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "source": "TextInput-XprTX",
                "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œTextInputœ,œidœ:œTextInput-XprTXœ}",
                "target": "Prompt-OnUxX",
                "targetHandle": "{œfieldNameœ:œlanguageœ,œidœ:œPrompt-OnUxXœ,œinputTypesœ:[œDocumentœ,œMessageœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "language",
                        "id": "Prompt-OnUxX",
                        "inputTypes": [
                            "Document",
                            "Message",
                            "Record",
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "dataType": "TextInput",
                        "id": "TextInput-XprTX"
                    }
                },
                "id": "reactflow__edge-TextInput-XprTX{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œTextInputœ,œidœ:œTextInput-XprTXœ}-Prompt-OnUxX{œfieldNameœ:œlanguageœ,œidœ:œPrompt-OnUxXœ,œinputTypesœ:[œDocumentœ,œMessageœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "className": ""
            },
            {
                "source": "ChatInput-hsfFT",
                "sourceHandle": "{œbaseClassesœ:[œMessageœ,œobjectœ,œstrœ,œTextœ],œdataTypeœ:œChatInputœ,œidœ:œChatInput-hsfFTœ}",
                "target": "Prompt-OnUxX",
                "targetHandle": "{œfieldNameœ:œuser_inputœ,œidœ:œPrompt-OnUxXœ,œinputTypesœ:[œDocumentœ,œMessageœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "user_input",
                        "id": "Prompt-OnUxX",
                        "inputTypes": [
                            "Document",
                            "Message",
                            "Record",
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Message",
                            "object",
                            "str",
                            "Text"
                        ],
                        "dataType": "ChatInput",
                        "id": "ChatInput-hsfFT"
                    }
                },
                "id": "reactflow__edge-ChatInput-hsfFT{œbaseClassesœ:[œMessageœ,œobjectœ,œstrœ,œTextœ],œdataTypeœ:œChatInputœ,œidœ:œChatInput-hsfFTœ}-Prompt-OnUxX{œfieldNameœ:œuser_inputœ,œidœ:œPrompt-OnUxXœ,œinputTypesœ:[œDocumentœ,œMessageœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "className": ""
            },
            {
                "source": "Prompt-OnUxX",
                "sourceHandle": "{œbaseClassesœ:[œPromptœ,œRecordœ],œdataTypeœ:œPromptœ,œidœ:œPrompt-OnUxXœ}",
                "target": "GroqModel-BUllZ",
                "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œGroqModel-BUllZœ,œinputTypesœ:[œTextœ,œRecordœ,œPromptœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "input_value",
                        "id": "GroqModel-BUllZ",
                        "inputTypes": [
                            "Text",
                            "Record",
                            "Prompt"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Prompt",
                            "Record"
                        ],
                        "dataType": "Prompt",
                        "id": "Prompt-OnUxX"
                    }
                },
                "id": "reactflow__edge-Prompt-OnUxX{œbaseClassesœ:[œPromptœ,œRecordœ],œdataTypeœ:œPromptœ,œidœ:œPrompt-OnUxXœ}-GroqModel-BUllZ{œfieldNameœ:œinput_valueœ,œidœ:œGroqModel-BUllZœ,œinputTypesœ:[œTextœ,œRecordœ,œPromptœ],œtypeœ:œstrœ}"
            },
            {
                "source": "GroqModel-BUllZ",
                "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œGroqModelœ,œidœ:œGroqModel-BUllZœ}",
                "target": "CustomComponent-1JudS",
                "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œCustomComponent-1JudSœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "input_value",
                        "id": "CustomComponent-1JudS",
                        "inputTypes": [
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "dataType": "GroqModel",
                        "id": "GroqModel-BUllZ"
                    }
                },
                "id": "reactflow__edge-GroqModel-BUllZ{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œGroqModelœ,œidœ:œGroqModel-BUllZœ}-CustomComponent-1JudS{œfieldNameœ:œinput_valueœ,œidœ:œCustomComponent-1JudSœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}"
            },
            {
                "source": "GroqModel-BUllZ",
                "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œGroqModelœ,œidœ:œGroqModel-BUllZœ}",
                "target": "ChatOutput-iFaQ0",
                "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-iFaQ0œ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "input_value",
                        "id": "ChatOutput-iFaQ0",
                        "inputTypes": [
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "dataType": "GroqModel",
                        "id": "GroqModel-BUllZ"
                    }
                },
                "id": "reactflow__edge-GroqModel-BUllZ{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œGroqModelœ,œidœ:œGroqModel-BUllZœ}-ChatOutput-iFaQ0{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-iFaQ0œ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}"
            }
        ],
        "viewport": {
            "x": 408.7587851145697,
            "y": 123.94492318688344,
            "zoom": 0.554982070169468
        }
    },
    "description": "This flow will get you experimenting with the basics of the UI, the Chat and the Prompt component. \n\nTry changing the Template in it to see how the model behaves. \nYou can change it to this and a Text Input into the `type_of_person` variable : \"Answer the user as if you were a pirate.\n\nUser: {user_input}\n\nAnswer: \" ",
    "name": "Babbelfish",
    "last_tested_version": "1.0.0a55",
    "is_component": false
}